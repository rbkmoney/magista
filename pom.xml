<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <description>Magista service (event statistics)</description>

    <parent>
        <groupId>com.rbkmoney</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.1.RELEASE</version>
    </parent>

    <groupId>com.rbkmoney.magista</groupId>
    <artifactId>magista</artifactId>
    <version>1.5.3</version>

    <properties>
        <server.port>8022</server.port>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <mst.db.url>jdbc:postgresql://localhost:5432/magista</mst.db.url>
                <mst.db.user>postgres</mst.db.user>
                <mst.db.password>postgres</mst.db.password>
                <mst.db.schema>mst</mst.db.schema>
                <flyway.db.url>${mst.db.url}</flyway.db.url>
                <flyway.user>${mst.db.user}</flyway.user>
                <flyway.password>${mst.db.password}</flyway.password>
                <bm.pooling.url>http://localhost:8081/repo</bm.pooling.url>
                <bm.pooling.limit>10</bm.pooling.limit>
            </properties>
        </profile>
        <profile>
            <id>ci</id>
            <properties>
                <mst.db.url>jdbc:postgresql://${db.url.host.name}:5432/magista</mst.db.url>
                <mst.db.user>postgres</mst.db.user>
                <mst.db.password>postgres</mst.db.password>
                <mst.db.schema>mst</mst.db.schema>
                <db.url.host.name>mst_db</db.url.host.name>
                <flyway.db.url>${mst.db.url}</flyway.db.url>
                <flyway.user>${mst.db.user}</flyway.user>
                <flyway.password>${mst.db.password}</flyway.password>
                <bm.pooling.url>http://locahost:8080</bm.pooling.url>
                <bm.pooling.limit>10</bm.pooling.limit>
            </properties>
        </profile>
        <profile>
            <!--If want to run docker container with PostgresDB on test phase-->
            <id>with_db</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.15.16</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>database</alias>
                                    <name>postgres:9.6</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                                            <POSTGRES_USER>postgres</POSTGRES_USER>
                                            <POSTGRES_DB>mst</POSTGRES_DB>
                                        </env>
                                        <ports>
                                            <port>5432:5432</port>
                                        </ports>
                                        <wait>
                                            <log>ready for start up</log>
                                            <time>20000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>stop containers before build</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>start containers</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop containers</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
    <dependencies>
        <!--Thrirdparty libs-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>4.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>3.8.4</version>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4-1206-jdbc42</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>4.6</version>
        </dependency>

        <!--RBK libs-->
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>dbinit</artifactId>
            <version>1.0.5</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>eventstock-client</artifactId>
            <version>1.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>damsel</artifactId>
            <version>1.132-27bc11c</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>thrift-filter</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney.logback</groupId>
            <artifactId>nop-rolling</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>javafx</groupId>
            <artifactId>jfxrt</artifactId>
            <version>2.0</version>
        </dependency>

        <!--Test libs-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}</directory>
                <targetPath>${project.build.directory}</targetPath>
                <includes>
                    <include>Dockerfile</include>
                    <include>containerpilot.json</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>ru.concerteza.buildnumber</groupId>
                <artifactId>maven-jgit-buildnumber-plugin</artifactId>
                <version>1.2.9</version>
                <executions>
                    <execution>
                        <id>git-buildnumber</id>
                        <goals>
                            <goal>extract-buildnumber</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>

/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.magista.domain.tables.pojos;


import com.rbkmoney.magista.domain.enums.PayoutEventCategory;
import com.rbkmoney.magista.domain.enums.PayoutEventType;
import com.rbkmoney.magista.domain.enums.PayoutStatus;
import com.rbkmoney.magista.domain.enums.PayoutType;

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayoutEventStat implements Serializable {

    private static final long serialVersionUID = 47172676;

    private Long                id;
    private Long                eventId;
    private PayoutEventCategory eventCategory;
    private PayoutEventType     eventType;
    private LocalDateTime       eventCreatedAt;
    private String              partyId;
    private String              partyShopId;
    private String              payoutId;
    private LocalDateTime       payoutCreatedAt;
    private PayoutStatus        payoutStatus;
    private Long                payoutAmount;
    private Long                payoutFee;
    private PayoutType          payoutType;
    private String              payoutPaidDetailsType;
    private String              payoutCardRequestId;
    private String              payoutCardMaskPan;
    private String              payoutCardProviderName;
    private String              payoutCardTransactionId;
    private String              payoutAccountId;
    private String              payoutAccountBankCorrId;
    private String              payoutAccountBankBik;
    private String              payoutAccountBankInn;
    private String              payoutAccountPurpose;
    private String              payoutCancelDetails;

    public PayoutEventStat() {}

    public PayoutEventStat(PayoutEventStat value) {
        this.id = value.id;
        this.eventId = value.eventId;
        this.eventCategory = value.eventCategory;
        this.eventType = value.eventType;
        this.eventCreatedAt = value.eventCreatedAt;
        this.partyId = value.partyId;
        this.partyShopId = value.partyShopId;
        this.payoutId = value.payoutId;
        this.payoutCreatedAt = value.payoutCreatedAt;
        this.payoutStatus = value.payoutStatus;
        this.payoutAmount = value.payoutAmount;
        this.payoutFee = value.payoutFee;
        this.payoutType = value.payoutType;
        this.payoutPaidDetailsType = value.payoutPaidDetailsType;
        this.payoutCardRequestId = value.payoutCardRequestId;
        this.payoutCardMaskPan = value.payoutCardMaskPan;
        this.payoutCardProviderName = value.payoutCardProviderName;
        this.payoutCardTransactionId = value.payoutCardTransactionId;
        this.payoutAccountId = value.payoutAccountId;
        this.payoutAccountBankCorrId = value.payoutAccountBankCorrId;
        this.payoutAccountBankBik = value.payoutAccountBankBik;
        this.payoutAccountBankInn = value.payoutAccountBankInn;
        this.payoutAccountPurpose = value.payoutAccountPurpose;
        this.payoutCancelDetails = value.payoutCancelDetails;
    }

    public PayoutEventStat(
        Long                id,
        Long                eventId,
        PayoutEventCategory eventCategory,
        PayoutEventType     eventType,
        LocalDateTime       eventCreatedAt,
        String              partyId,
        String              partyShopId,
        String              payoutId,
        LocalDateTime       payoutCreatedAt,
        PayoutStatus        payoutStatus,
        Long                payoutAmount,
        Long                payoutFee,
        PayoutType          payoutType,
        String              payoutPaidDetailsType,
        String              payoutCardRequestId,
        String              payoutCardMaskPan,
        String              payoutCardProviderName,
        String              payoutCardTransactionId,
        String              payoutAccountId,
        String              payoutAccountBankCorrId,
        String              payoutAccountBankBik,
        String              payoutAccountBankInn,
        String              payoutAccountPurpose,
        String              payoutCancelDetails
    ) {
        this.id = id;
        this.eventId = eventId;
        this.eventCategory = eventCategory;
        this.eventType = eventType;
        this.eventCreatedAt = eventCreatedAt;
        this.partyId = partyId;
        this.partyShopId = partyShopId;
        this.payoutId = payoutId;
        this.payoutCreatedAt = payoutCreatedAt;
        this.payoutStatus = payoutStatus;
        this.payoutAmount = payoutAmount;
        this.payoutFee = payoutFee;
        this.payoutType = payoutType;
        this.payoutPaidDetailsType = payoutPaidDetailsType;
        this.payoutCardRequestId = payoutCardRequestId;
        this.payoutCardMaskPan = payoutCardMaskPan;
        this.payoutCardProviderName = payoutCardProviderName;
        this.payoutCardTransactionId = payoutCardTransactionId;
        this.payoutAccountId = payoutAccountId;
        this.payoutAccountBankCorrId = payoutAccountBankCorrId;
        this.payoutAccountBankBik = payoutAccountBankBik;
        this.payoutAccountBankInn = payoutAccountBankInn;
        this.payoutAccountPurpose = payoutAccountPurpose;
        this.payoutCancelDetails = payoutCancelDetails;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getEventId() {
        return this.eventId;
    }

    public void setEventId(Long eventId) {
        this.eventId = eventId;
    }

    public PayoutEventCategory getEventCategory() {
        return this.eventCategory;
    }

    public void setEventCategory(PayoutEventCategory eventCategory) {
        this.eventCategory = eventCategory;
    }

    public PayoutEventType getEventType() {
        return this.eventType;
    }

    public void setEventType(PayoutEventType eventType) {
        this.eventType = eventType;
    }

    public LocalDateTime getEventCreatedAt() {
        return this.eventCreatedAt;
    }

    public void setEventCreatedAt(LocalDateTime eventCreatedAt) {
        this.eventCreatedAt = eventCreatedAt;
    }

    public String getPartyId() {
        return this.partyId;
    }

    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }

    public String getPartyShopId() {
        return this.partyShopId;
    }

    public void setPartyShopId(String partyShopId) {
        this.partyShopId = partyShopId;
    }

    public String getPayoutId() {
        return this.payoutId;
    }

    public void setPayoutId(String payoutId) {
        this.payoutId = payoutId;
    }

    public LocalDateTime getPayoutCreatedAt() {
        return this.payoutCreatedAt;
    }

    public void setPayoutCreatedAt(LocalDateTime payoutCreatedAt) {
        this.payoutCreatedAt = payoutCreatedAt;
    }

    public PayoutStatus getPayoutStatus() {
        return this.payoutStatus;
    }

    public void setPayoutStatus(PayoutStatus payoutStatus) {
        this.payoutStatus = payoutStatus;
    }

    public Long getPayoutAmount() {
        return this.payoutAmount;
    }

    public void setPayoutAmount(Long payoutAmount) {
        this.payoutAmount = payoutAmount;
    }

    public Long getPayoutFee() {
        return this.payoutFee;
    }

    public void setPayoutFee(Long payoutFee) {
        this.payoutFee = payoutFee;
    }

    public PayoutType getPayoutType() {
        return this.payoutType;
    }

    public void setPayoutType(PayoutType payoutType) {
        this.payoutType = payoutType;
    }

    public String getPayoutPaidDetailsType() {
        return this.payoutPaidDetailsType;
    }

    public void setPayoutPaidDetailsType(String payoutPaidDetailsType) {
        this.payoutPaidDetailsType = payoutPaidDetailsType;
    }

    public String getPayoutCardRequestId() {
        return this.payoutCardRequestId;
    }

    public void setPayoutCardRequestId(String payoutCardRequestId) {
        this.payoutCardRequestId = payoutCardRequestId;
    }

    public String getPayoutCardMaskPan() {
        return this.payoutCardMaskPan;
    }

    public void setPayoutCardMaskPan(String payoutCardMaskPan) {
        this.payoutCardMaskPan = payoutCardMaskPan;
    }

    public String getPayoutCardProviderName() {
        return this.payoutCardProviderName;
    }

    public void setPayoutCardProviderName(String payoutCardProviderName) {
        this.payoutCardProviderName = payoutCardProviderName;
    }

    public String getPayoutCardTransactionId() {
        return this.payoutCardTransactionId;
    }

    public void setPayoutCardTransactionId(String payoutCardTransactionId) {
        this.payoutCardTransactionId = payoutCardTransactionId;
    }

    public String getPayoutAccountId() {
        return this.payoutAccountId;
    }

    public void setPayoutAccountId(String payoutAccountId) {
        this.payoutAccountId = payoutAccountId;
    }

    public String getPayoutAccountBankCorrId() {
        return this.payoutAccountBankCorrId;
    }

    public void setPayoutAccountBankCorrId(String payoutAccountBankCorrId) {
        this.payoutAccountBankCorrId = payoutAccountBankCorrId;
    }

    public String getPayoutAccountBankBik() {
        return this.payoutAccountBankBik;
    }

    public void setPayoutAccountBankBik(String payoutAccountBankBik) {
        this.payoutAccountBankBik = payoutAccountBankBik;
    }

    public String getPayoutAccountBankInn() {
        return this.payoutAccountBankInn;
    }

    public void setPayoutAccountBankInn(String payoutAccountBankInn) {
        this.payoutAccountBankInn = payoutAccountBankInn;
    }

    public String getPayoutAccountPurpose() {
        return this.payoutAccountPurpose;
    }

    public void setPayoutAccountPurpose(String payoutAccountPurpose) {
        this.payoutAccountPurpose = payoutAccountPurpose;
    }

    public String getPayoutCancelDetails() {
        return this.payoutCancelDetails;
    }

    public void setPayoutCancelDetails(String payoutCancelDetails) {
        this.payoutCancelDetails = payoutCancelDetails;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PayoutEventStat other = (PayoutEventStat) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (eventId == null) {
            if (other.eventId != null)
                return false;
        }
        else if (!eventId.equals(other.eventId))
            return false;
        if (eventCategory == null) {
            if (other.eventCategory != null)
                return false;
        }
        else if (!eventCategory.equals(other.eventCategory))
            return false;
        if (eventType == null) {
            if (other.eventType != null)
                return false;
        }
        else if (!eventType.equals(other.eventType))
            return false;
        if (eventCreatedAt == null) {
            if (other.eventCreatedAt != null)
                return false;
        }
        else if (!eventCreatedAt.equals(other.eventCreatedAt))
            return false;
        if (partyId == null) {
            if (other.partyId != null)
                return false;
        }
        else if (!partyId.equals(other.partyId))
            return false;
        if (partyShopId == null) {
            if (other.partyShopId != null)
                return false;
        }
        else if (!partyShopId.equals(other.partyShopId))
            return false;
        if (payoutId == null) {
            if (other.payoutId != null)
                return false;
        }
        else if (!payoutId.equals(other.payoutId))
            return false;
        if (payoutCreatedAt == null) {
            if (other.payoutCreatedAt != null)
                return false;
        }
        else if (!payoutCreatedAt.equals(other.payoutCreatedAt))
            return false;
        if (payoutStatus == null) {
            if (other.payoutStatus != null)
                return false;
        }
        else if (!payoutStatus.equals(other.payoutStatus))
            return false;
        if (payoutAmount == null) {
            if (other.payoutAmount != null)
                return false;
        }
        else if (!payoutAmount.equals(other.payoutAmount))
            return false;
        if (payoutFee == null) {
            if (other.payoutFee != null)
                return false;
        }
        else if (!payoutFee.equals(other.payoutFee))
            return false;
        if (payoutType == null) {
            if (other.payoutType != null)
                return false;
        }
        else if (!payoutType.equals(other.payoutType))
            return false;
        if (payoutPaidDetailsType == null) {
            if (other.payoutPaidDetailsType != null)
                return false;
        }
        else if (!payoutPaidDetailsType.equals(other.payoutPaidDetailsType))
            return false;
        if (payoutCardRequestId == null) {
            if (other.payoutCardRequestId != null)
                return false;
        }
        else if (!payoutCardRequestId.equals(other.payoutCardRequestId))
            return false;
        if (payoutCardMaskPan == null) {
            if (other.payoutCardMaskPan != null)
                return false;
        }
        else if (!payoutCardMaskPan.equals(other.payoutCardMaskPan))
            return false;
        if (payoutCardProviderName == null) {
            if (other.payoutCardProviderName != null)
                return false;
        }
        else if (!payoutCardProviderName.equals(other.payoutCardProviderName))
            return false;
        if (payoutCardTransactionId == null) {
            if (other.payoutCardTransactionId != null)
                return false;
        }
        else if (!payoutCardTransactionId.equals(other.payoutCardTransactionId))
            return false;
        if (payoutAccountId == null) {
            if (other.payoutAccountId != null)
                return false;
        }
        else if (!payoutAccountId.equals(other.payoutAccountId))
            return false;
        if (payoutAccountBankCorrId == null) {
            if (other.payoutAccountBankCorrId != null)
                return false;
        }
        else if (!payoutAccountBankCorrId.equals(other.payoutAccountBankCorrId))
            return false;
        if (payoutAccountBankBik == null) {
            if (other.payoutAccountBankBik != null)
                return false;
        }
        else if (!payoutAccountBankBik.equals(other.payoutAccountBankBik))
            return false;
        if (payoutAccountBankInn == null) {
            if (other.payoutAccountBankInn != null)
                return false;
        }
        else if (!payoutAccountBankInn.equals(other.payoutAccountBankInn))
            return false;
        if (payoutAccountPurpose == null) {
            if (other.payoutAccountPurpose != null)
                return false;
        }
        else if (!payoutAccountPurpose.equals(other.payoutAccountPurpose))
            return false;
        if (payoutCancelDetails == null) {
            if (other.payoutCancelDetails != null)
                return false;
        }
        else if (!payoutCancelDetails.equals(other.payoutCancelDetails))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        result = prime * result + ((eventId == null) ? 0 : eventId.hashCode());
        result = prime * result + ((eventCategory == null) ? 0 : eventCategory.hashCode());
        result = prime * result + ((eventType == null) ? 0 : eventType.hashCode());
        result = prime * result + ((eventCreatedAt == null) ? 0 : eventCreatedAt.hashCode());
        result = prime * result + ((partyId == null) ? 0 : partyId.hashCode());
        result = prime * result + ((partyShopId == null) ? 0 : partyShopId.hashCode());
        result = prime * result + ((payoutId == null) ? 0 : payoutId.hashCode());
        result = prime * result + ((payoutCreatedAt == null) ? 0 : payoutCreatedAt.hashCode());
        result = prime * result + ((payoutStatus == null) ? 0 : payoutStatus.hashCode());
        result = prime * result + ((payoutAmount == null) ? 0 : payoutAmount.hashCode());
        result = prime * result + ((payoutFee == null) ? 0 : payoutFee.hashCode());
        result = prime * result + ((payoutType == null) ? 0 : payoutType.hashCode());
        result = prime * result + ((payoutPaidDetailsType == null) ? 0 : payoutPaidDetailsType.hashCode());
        result = prime * result + ((payoutCardRequestId == null) ? 0 : payoutCardRequestId.hashCode());
        result = prime * result + ((payoutCardMaskPan == null) ? 0 : payoutCardMaskPan.hashCode());
        result = prime * result + ((payoutCardProviderName == null) ? 0 : payoutCardProviderName.hashCode());
        result = prime * result + ((payoutCardTransactionId == null) ? 0 : payoutCardTransactionId.hashCode());
        result = prime * result + ((payoutAccountId == null) ? 0 : payoutAccountId.hashCode());
        result = prime * result + ((payoutAccountBankCorrId == null) ? 0 : payoutAccountBankCorrId.hashCode());
        result = prime * result + ((payoutAccountBankBik == null) ? 0 : payoutAccountBankBik.hashCode());
        result = prime * result + ((payoutAccountBankInn == null) ? 0 : payoutAccountBankInn.hashCode());
        result = prime * result + ((payoutAccountPurpose == null) ? 0 : payoutAccountPurpose.hashCode());
        result = prime * result + ((payoutCancelDetails == null) ? 0 : payoutCancelDetails.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PayoutEventStat (");

        sb.append(id);
        sb.append(", ").append(eventId);
        sb.append(", ").append(eventCategory);
        sb.append(", ").append(eventType);
        sb.append(", ").append(eventCreatedAt);
        sb.append(", ").append(partyId);
        sb.append(", ").append(partyShopId);
        sb.append(", ").append(payoutId);
        sb.append(", ").append(payoutCreatedAt);
        sb.append(", ").append(payoutStatus);
        sb.append(", ").append(payoutAmount);
        sb.append(", ").append(payoutFee);
        sb.append(", ").append(payoutType);
        sb.append(", ").append(payoutPaidDetailsType);
        sb.append(", ").append(payoutCardRequestId);
        sb.append(", ").append(payoutCardMaskPan);
        sb.append(", ").append(payoutCardProviderName);
        sb.append(", ").append(payoutCardTransactionId);
        sb.append(", ").append(payoutAccountId);
        sb.append(", ").append(payoutAccountBankCorrId);
        sb.append(", ").append(payoutAccountBankBik);
        sb.append(", ").append(payoutAccountBankInn);
        sb.append(", ").append(payoutAccountPurpose);
        sb.append(", ").append(payoutCancelDetails);

        sb.append(")");
        return sb.toString();
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.rbkmoney.magista.domain.tables;


import com.rbkmoney.magista.domain.Indexes;
import com.rbkmoney.magista.domain.Keys;
import com.rbkmoney.magista.domain.Mst;
import com.rbkmoney.magista.domain.tables.records.InvoiceDataRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceData extends TableImpl<InvoiceDataRecord> {

    private static final long serialVersionUID = -1097155983;

    /**
     * The reference instance of <code>mst.invoice_data</code>
     */
    public static final InvoiceData INVOICE_DATA = new InvoiceData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvoiceDataRecord> getRecordType() {
        return InvoiceDataRecord.class;
    }

    /**
     * The column <code>mst.invoice_data.id</code>.
     */
    public final TableField<InvoiceDataRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('mst.invoice_data_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>mst.invoice_data.party_id</code>.
     */
    public final TableField<InvoiceDataRecord, UUID> PARTY_ID = createField("party_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>mst.invoice_data.party_shop_id</code>.
     */
    public final TableField<InvoiceDataRecord, String> PARTY_SHOP_ID = createField("party_shop_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.invoice_data.invoice_id</code>.
     */
    public final TableField<InvoiceDataRecord, String> INVOICE_ID = createField("invoice_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.invoice_data.invoice_product</code>.
     */
    public final TableField<InvoiceDataRecord, String> INVOICE_PRODUCT = createField("invoice_product", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.invoice_data.invoice_description</code>.
     */
    public final TableField<InvoiceDataRecord, String> INVOICE_DESCRIPTION = createField("invoice_description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.invoice_data.invoice_amount</code>.
     */
    public final TableField<InvoiceDataRecord, Long> INVOICE_AMOUNT = createField("invoice_amount", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>mst.invoice_data.invoice_currency_code</code>.
     */
    public final TableField<InvoiceDataRecord, String> INVOICE_CURRENCY_CODE = createField("invoice_currency_code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.invoice_data.invoice_due</code>.
     */
    public final TableField<InvoiceDataRecord, LocalDateTime> INVOICE_DUE = createField("invoice_due", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>mst.invoice_data.invoice_created_at</code>.
     */
    public final TableField<InvoiceDataRecord, LocalDateTime> INVOICE_CREATED_AT = createField("invoice_created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>mst.invoice_data.invoice_party_revision</code>.
     */
    public final TableField<InvoiceDataRecord, Long> INVOICE_PARTY_REVISION = createField("invoice_party_revision", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>mst.invoice_data.invoice_template_id</code>.
     */
    public final TableField<InvoiceDataRecord, String> INVOICE_TEMPLATE_ID = createField("invoice_template_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.invoice_data.invoice_cart_json</code>.
     */
    public final TableField<InvoiceDataRecord, String> INVOICE_CART_JSON = createField("invoice_cart_json", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.invoice_data.invoice_context_type</code>.
     */
    public final TableField<InvoiceDataRecord, String> INVOICE_CONTEXT_TYPE = createField("invoice_context_type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.invoice_data.invoice_context</code>.
     */
    public final TableField<InvoiceDataRecord, byte[]> INVOICE_CONTEXT = createField("invoice_context", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>mst.invoice_data</code> table reference
     */
    public InvoiceData() {
        this(DSL.name("invoice_data"), null);
    }

    /**
     * Create an aliased <code>mst.invoice_data</code> table reference
     */
    public InvoiceData(String alias) {
        this(DSL.name(alias), INVOICE_DATA);
    }

    /**
     * Create an aliased <code>mst.invoice_data</code> table reference
     */
    public InvoiceData(Name alias) {
        this(alias, INVOICE_DATA);
    }

    private InvoiceData(Name alias, Table<InvoiceDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private InvoiceData(Name alias, Table<InvoiceDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InvoiceData(Table<O> child, ForeignKey<O, InvoiceDataRecord> key) {
        super(child, key, INVOICE_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mst.MST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INVOICE_DATA_INVOICE_CREATED_AT_IDX, Indexes.INVOICE_DATA_PKEY, Indexes.INVOICE_DATA_UKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InvoiceDataRecord, Long> getIdentity() {
        return Keys.IDENTITY_INVOICE_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InvoiceDataRecord> getPrimaryKey() {
        return Keys.INVOICE_DATA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InvoiceDataRecord>> getKeys() {
        return Arrays.<UniqueKey<InvoiceDataRecord>>asList(Keys.INVOICE_DATA_PKEY, Keys.INVOICE_DATA_UKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceData as(String alias) {
        return new InvoiceData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceData as(Name alias) {
        return new InvoiceData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoiceData rename(String name) {
        return new InvoiceData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoiceData rename(Name name) {
        return new InvoiceData(name, null);
    }
}

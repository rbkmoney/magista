/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.magista.domain.tables;


import com.rbkmoney.magista.domain.Keys;
import com.rbkmoney.magista.domain.Mst;
import com.rbkmoney.magista.domain.tables.records.PaymentRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payment extends TableImpl<PaymentRecord> {

    private static final long serialVersionUID = -426179310;

    /**
     * The reference instance of <code>mst.payment</code>
     */
    public static final Payment PAYMENT = new Payment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentRecord> getRecordType() {
        return PaymentRecord.class;
    }

    /**
     * The column <code>mst.payment.payment_id</code>.
     */
    public final TableField<PaymentRecord, String> PAYMENT_ID = createField("payment_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.event_id</code>.
     */
    public final TableField<PaymentRecord, Long> EVENT_ID = createField("event_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>mst.payment.invoice_id</code>.
     */
    public final TableField<PaymentRecord, String> INVOICE_ID = createField("invoice_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.merchant_id</code>.
     */
    public final TableField<PaymentRecord, String> MERCHANT_ID = createField("merchant_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.shop_id</code>.
     */
    public final TableField<PaymentRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mst.payment.customer_id</code>.
     */
    public final TableField<PaymentRecord, String> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.payment.masked_pan</code>.
     */
    public final TableField<PaymentRecord, String> MASKED_PAN = createField("masked_pan", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.status</code>.
     */
    public final TableField<PaymentRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.amount</code>.
     */
    public final TableField<PaymentRecord, Long> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>mst.payment.fee</code>.
     */
    public final TableField<PaymentRecord, Long> FEE = createField("fee", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>mst.payment.currency_code</code>.
     */
    public final TableField<PaymentRecord, String> CURRENCY_CODE = createField("currency_code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.payment_system</code>.
     */
    public final TableField<PaymentRecord, String> PAYMENT_SYSTEM = createField("payment_system", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.country_id</code>.
     */
    public final TableField<PaymentRecord, Integer> COUNTRY_ID = createField("country_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mst.payment.city_id</code>.
     */
    public final TableField<PaymentRecord, Integer> CITY_ID = createField("city_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mst.payment.ip</code>.
     */
    public final TableField<PaymentRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.payment.created_at</code>.
     */
    public final TableField<PaymentRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>mst.payment.changed_at</code>.
     */
    public final TableField<PaymentRecord, LocalDateTime> CHANGED_AT = createField("changed_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>mst.payment.phone_number</code>.
     */
    public final TableField<PaymentRecord, String> PHONE_NUMBER = createField("phone_number", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.payment.email</code>.
     */
    public final TableField<PaymentRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.payment.token</code>.
     */
    public final TableField<PaymentRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.session_id</code>.
     */
    public final TableField<PaymentRecord, String> SESSION_ID = createField("session_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.bin</code>.
     */
    public final TableField<PaymentRecord, String> BIN = createField("bin", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>mst.payment.payment_tool</code>.
     */
    public final TableField<PaymentRecord, String> PAYMENT_TOOL = createField("payment_tool", org.jooq.impl.SQLDataType.VARCHAR.nullable(false).defaultValue(org.jooq.impl.DSL.field("'bank_card'::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mst.payment.failure_code</code>.
     */
    public final TableField<PaymentRecord, String> FAILURE_CODE = createField("failure_code", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.payment.failure_description</code>.
     */
    public final TableField<PaymentRecord, String> FAILURE_DESCRIPTION = createField("failure_description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>mst.payment.context</code>.
     */
    public final TableField<PaymentRecord, byte[]> CONTEXT = createField("context", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>mst.payment</code> table reference
     */
    public Payment() {
        this("payment", null);
    }

    /**
     * Create an aliased <code>mst.payment</code> table reference
     */
    public Payment(String alias) {
        this(alias, PAYMENT);
    }

    private Payment(String alias, Table<PaymentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Payment(String alias, Table<PaymentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mst.MST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PaymentRecord> getPrimaryKey() {
        return Keys.PAYMENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PaymentRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentRecord>>asList(Keys.PAYMENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Payment as(String alias) {
        return new Payment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Payment rename(String name) {
        return new Payment(name, null);
    }
}

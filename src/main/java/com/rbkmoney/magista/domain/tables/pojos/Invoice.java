/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.magista.domain.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Arrays;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Invoice implements Serializable {

    private static final long serialVersionUID = -757697135;

    private String        id;
    private Long          eventId;
    private String        merchantId;
    private Long          shopId;
    private String        status;
    private Long          amount;
    private String        currencyCode;
    private LocalDateTime createdAt;
    private LocalDateTime changedAt;
    private String        product;
    private String        description;
    private String        statusDetails;
    private LocalDateTime due;
    private byte[]        context;

    public Invoice() {}

    public Invoice(Invoice value) {
        this.id = value.id;
        this.eventId = value.eventId;
        this.merchantId = value.merchantId;
        this.shopId = value.shopId;
        this.status = value.status;
        this.amount = value.amount;
        this.currencyCode = value.currencyCode;
        this.createdAt = value.createdAt;
        this.changedAt = value.changedAt;
        this.product = value.product;
        this.description = value.description;
        this.statusDetails = value.statusDetails;
        this.due = value.due;
        this.context = value.context;
    }

    public Invoice(
        String        id,
        Long          eventId,
        String        merchantId,
        Long          shopId,
        String        status,
        Long          amount,
        String        currencyCode,
        LocalDateTime createdAt,
        LocalDateTime changedAt,
        String        product,
        String        description,
        String        statusDetails,
        LocalDateTime due,
        byte[]        context
    ) {
        this.id = id;
        this.eventId = eventId;
        this.merchantId = merchantId;
        this.shopId = shopId;
        this.status = status;
        this.amount = amount;
        this.currencyCode = currencyCode;
        this.createdAt = createdAt;
        this.changedAt = changedAt;
        this.product = product;
        this.description = description;
        this.statusDetails = statusDetails;
        this.due = due;
        this.context = context;
    }

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Long getEventId() {
        return this.eventId;
    }

    public void setEventId(Long eventId) {
        this.eventId = eventId;
    }

    public String getMerchantId() {
        return this.merchantId;
    }

    public void setMerchantId(String merchantId) {
        this.merchantId = merchantId;
    }

    public Long getShopId() {
        return this.shopId;
    }

    public void setShopId(Long shopId) {
        this.shopId = shopId;
    }

    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public Long getAmount() {
        return this.amount;
    }

    public void setAmount(Long amount) {
        this.amount = amount;
    }

    public String getCurrencyCode() {
        return this.currencyCode;
    }

    public void setCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
    }

    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public LocalDateTime getChangedAt() {
        return this.changedAt;
    }

    public void setChangedAt(LocalDateTime changedAt) {
        this.changedAt = changedAt;
    }

    public String getProduct() {
        return this.product;
    }

    public void setProduct(String product) {
        this.product = product;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getStatusDetails() {
        return this.statusDetails;
    }

    public void setStatusDetails(String statusDetails) {
        this.statusDetails = statusDetails;
    }

    public LocalDateTime getDue() {
        return this.due;
    }

    public void setDue(LocalDateTime due) {
        this.due = due;
    }

    public byte[] getContext() {
        return this.context;
    }

    public void setContext(byte... context) {
        this.context = context;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Invoice other = (Invoice) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (eventId == null) {
            if (other.eventId != null)
                return false;
        }
        else if (!eventId.equals(other.eventId))
            return false;
        if (merchantId == null) {
            if (other.merchantId != null)
                return false;
        }
        else if (!merchantId.equals(other.merchantId))
            return false;
        if (shopId == null) {
            if (other.shopId != null)
                return false;
        }
        else if (!shopId.equals(other.shopId))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!amount.equals(other.amount))
            return false;
        if (currencyCode == null) {
            if (other.currencyCode != null)
                return false;
        }
        else if (!currencyCode.equals(other.currencyCode))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (changedAt == null) {
            if (other.changedAt != null)
                return false;
        }
        else if (!changedAt.equals(other.changedAt))
            return false;
        if (product == null) {
            if (other.product != null)
                return false;
        }
        else if (!product.equals(other.product))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (statusDetails == null) {
            if (other.statusDetails != null)
                return false;
        }
        else if (!statusDetails.equals(other.statusDetails))
            return false;
        if (due == null) {
            if (other.due != null)
                return false;
        }
        else if (!due.equals(other.due))
            return false;
        if (context == null) {
            if (other.context != null)
                return false;
        }
        else if (!Arrays.equals(context, other.context))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        result = prime * result + ((eventId == null) ? 0 : eventId.hashCode());
        result = prime * result + ((merchantId == null) ? 0 : merchantId.hashCode());
        result = prime * result + ((shopId == null) ? 0 : shopId.hashCode());
        result = prime * result + ((status == null) ? 0 : status.hashCode());
        result = prime * result + ((amount == null) ? 0 : amount.hashCode());
        result = prime * result + ((currencyCode == null) ? 0 : currencyCode.hashCode());
        result = prime * result + ((createdAt == null) ? 0 : createdAt.hashCode());
        result = prime * result + ((changedAt == null) ? 0 : changedAt.hashCode());
        result = prime * result + ((product == null) ? 0 : product.hashCode());
        result = prime * result + ((description == null) ? 0 : description.hashCode());
        result = prime * result + ((statusDetails == null) ? 0 : statusDetails.hashCode());
        result = prime * result + ((due == null) ? 0 : due.hashCode());
        result = prime * result + ((context == null) ? 0 : Arrays.hashCode(context));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Invoice (");

        sb.append(id);
        sb.append(", ").append(eventId);
        sb.append(", ").append(merchantId);
        sb.append(", ").append(shopId);
        sb.append(", ").append(status);
        sb.append(", ").append(amount);
        sb.append(", ").append(currencyCode);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(changedAt);
        sb.append(", ").append(product);
        sb.append(", ").append(description);
        sb.append(", ").append(statusDetails);
        sb.append(", ").append(due);
        sb.append(", ").append("[binary...]");

        sb.append(")");
        return sb.toString();
    }
}
